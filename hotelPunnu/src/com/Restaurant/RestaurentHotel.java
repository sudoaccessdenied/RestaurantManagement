/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Restaurant;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import java.io.FileOutputStream;
import java.io.IOException;
import com.hotelPunnu.MyFooter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintException;
/**
 *
 * @author Intel
 */
public class RestaurentHotel extends javax.swing.JFrame {

    /**
     * Creates new form RestaurentHotel
     */
    public RestaurentHotel() {
        /*
        if(CashierName.equals("admin")){
        add.setEnabled(false);
        System.out.println("Matches");
        }
        */
        initComponents();
        this.setLocationRelativeTo(null);
         this.intItems();
         
        heading.setText("Welcome "+CashierName+" To Point Of Sale");//Just for Test
        this.setTitle("Hotel Punnu Point Of Sale");
       
       
    }
    
    private double getSubtotal(int numberOfNight, double pricePerNight){
        
        return (numberOfNight*pricePerNight);
    }
    
    protected void connectDatabase(){
    try{
        Class.forName("com.mysql.jdbc.Driver");
     }catch(ClassNotFoundException e){
         JOptionPane.showMessageDialog(this, "Error", "DataBase not available ",  JOptionPane.ERROR_MESSAGE);
     }
      try{  //connection 
         con = DriverManager.getConnection("jdbc:mysql://localhost:3306/punnuhotel?useSSL=false","root","incorrect123");
      }catch(SQLException e ){
          
           JOptionPane.showMessageDialog(this, "Error", "Unable to connect to localhost server please try again ",  JOptionPane.ERROR_MESSAGE);
      }
    
    }
    
    
    public  void intItems(){
        
      
     this.connectDatabase();
      try{
        PreparedStatement psmt = con.prepareStatement("SELECT * FROM menu_item");
        ResultSet rs = psmt.executeQuery();
        
        while(rs.next()){
        items.addItem(rs.getString(1));
     
        }
       System.out.println("initilized");
        con.close();
        psmt.close();
        rs.close();
      }catch(SQLException my){
      // perform  excepiton here please
        JOptionPane.showMessageDialog(this, my.getMessage(),"SQLError",  JOptionPane.ERROR_MESSAGE);
      }
    
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        roomNumber = new javax.swing.JComboBox<>();
        hotelAddButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        hotelTable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        pricePerNight = new javax.swing.JTextField();
        hotelGstCheckBox = new javax.swing.JCheckBox();
        hotelRemoveButton = new javax.swing.JButton();
        hotelCheckBox = new javax.swing.JCheckBox();
        checkOutDate = new com.toedter.calendar.JDateChooser();
        checkInDate = new com.toedter.calendar.JDateChooser();
        numberOfNight = new javax.swing.JTextField();
        roomType = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        restaurantCheckBox = new javax.swing.JCheckBox();
        quantity = new javax.swing.JTextField();
        waiterName = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        tableNumber = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        restaurantTable = new javax.swing.JTable();
        addToCart = new javax.swing.JButton();
        removeOrder = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        items = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        restaurantGstCheckBox = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        heading = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        restaurantBillTotal = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        payableAmount = new javax.swing.JTextField();
        discount = new javax.swing.JTextField();
        roomBillTotal = new javax.swing.JTextField();
        calculateButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        mobileNumber = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        billNumber = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        lastName = new javax.swing.JTextField();
        firstName = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        zipCode = new javax.swing.JTextField();
        resetButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        printButton = new javax.swing.JButton();
        add = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        balance = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        rec = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        changeButtonActionPerformed = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 105, 92));

        jPanel4.setBackground(new java.awt.Color(0, 105, 92));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "HOTEL BILL FORM", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Berlin Sans FB Demi", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("No. Of Nights:");

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Room Nos.:");

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Room Type:");

        jLabel12.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Check Out:");

        jLabel13.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Check In :");

        roomNumber.setBackground(new java.awt.Color(0, 105, 92));
        roomNumber.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        roomNumber.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "112", "113", "124", "125", "126", "127", "128", "131", "132", "201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "218", "219", "220", "221", "222", "212", "214", "215", "216" }));
        roomNumber.setEnabled(false);

        hotelAddButton.setBackground(new java.awt.Color(255, 0, 0));
        hotelAddButton.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        hotelAddButton.setForeground(new java.awt.Color(255, 255, 255));
        hotelAddButton.setText("ADD");
        hotelAddButton.setEnabled(false);
        hotelAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelAddButtonActionPerformed(evt);
            }
        });

        hotelTable.setBackground(new java.awt.Color(0, 105, 92));
        hotelTable.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        hotelTable.setForeground(new java.awt.Color(255, 255, 255));
        hotelTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ROOM NO.", "NO. OF NIGHTS", "PRICE PER NIGHT", "SUBTOTAL", "GST 18%", "LINE TOTAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hotelTable.setEnabled(false);
        jScrollPane1.setViewportView(hotelTable);

        jLabel14.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Price Per Night");

        pricePerNight.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        pricePerNight.setEnabled(false);

        hotelGstCheckBox.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        hotelGstCheckBox.setForeground(new java.awt.Color(240, 240, 240));
        hotelGstCheckBox.setSelected(true);
        hotelGstCheckBox.setText("Apply GST");
        hotelGstCheckBox.setEnabled(false);

        hotelRemoveButton.setBackground(new java.awt.Color(255, 0, 0));
        hotelRemoveButton.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        hotelRemoveButton.setForeground(new java.awt.Color(255, 255, 255));
        hotelRemoveButton.setText("REMOVE");
        hotelRemoveButton.setEnabled(false);
        hotelRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelRemoveButtonActionPerformed(evt);
            }
        });

        hotelCheckBox.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 18)); // NOI18N
        hotelCheckBox.setForeground(new java.awt.Color(255, 255, 255));
        hotelCheckBox.setText("HOTEL BILL");
        hotelCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelCheckBoxActionPerformed(evt);
            }
        });

        checkOutDate.setBackground(new java.awt.Color(0, 105, 92));
        checkOutDate.setDateFormatString(" yyyy-MM-dd");
        checkOutDate.setEnabled(false);

        checkInDate.setBackground(new java.awt.Color(0, 105, 92));
        checkInDate.setDateFormatString(" yyyy-MM-dd");
        checkInDate.setEnabled(false);

        numberOfNight.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        numberOfNight.setEnabled(false);

        roomType.setBackground(new java.awt.Color(0, 105, 92));
        roomType.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        roomType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DELUX", "SUPER DELUX" }));
        roomType.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 4, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkOutDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkInDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hotelGstCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(hotelAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hotelRemoveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pricePerNight, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(numberOfNight, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(hotelCheckBox)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(hotelCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(checkInDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(numberOfNight, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkOutDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pricePerNight, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hotelGstCheckBox)
                            .addComponent(roomType, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(roomNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(hotelAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(hotelRemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 105, 92));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "RESTAURANT/BAR BILL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Berlin Sans FB Demi", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));

        restaurantCheckBox.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        restaurantCheckBox.setForeground(new java.awt.Color(255, 255, 255));
        restaurantCheckBox.setText("RESTAURANT / BAR BILL");
        restaurantCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restaurantCheckBoxActionPerformed(evt);
            }
        });

        quantity.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        quantity.setEnabled(false);

        waiterName.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        waiterName.setEnabled(false);

        jLabel24.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("ITEMS.");

        tableNumber.setBackground(new java.awt.Color(0, 105, 92));
        tableNumber.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        tableNumber.setForeground(new java.awt.Color(255, 255, 255));
        tableNumber.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "BL1", "BL2", "T101", "T102", "T103", "T104", "T105", "T106", "T107", "T108", "112", "113", "124", "125", "126", "127", "128", "131", "132", "201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "218", "219", "220", "221", "222", "212", "214", "215", "216" }));
        tableNumber.setEnabled(false);

        restaurantTable.setBackground(new java.awt.Color(0, 105, 92));
        restaurantTable.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        restaurantTable.setForeground(new java.awt.Color(255, 255, 255));
        restaurantTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEMS", "QUANTITY", "RATE", "PRICE", "GST 5%", "LINE TOTAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        restaurantTable.setEnabled(false);
        jScrollPane2.setViewportView(restaurantTable);

        addToCart.setBackground(new java.awt.Color(255, 0, 0));
        addToCart.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        addToCart.setForeground(new java.awt.Color(255, 255, 255));
        addToCart.setText("ADD TO CART");
        addToCart.setEnabled(false);
        addToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartActionPerformed(evt);
            }
        });

        removeOrder.setBackground(new java.awt.Color(255, 0, 0));
        removeOrder.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        removeOrder.setForeground(new java.awt.Color(255, 255, 255));
        removeOrder.setText("REMOVE ORDER");
        removeOrder.setEnabled(false);
        removeOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeOrderActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("TABLE NO.");

        items.setBackground(new java.awt.Color(0, 105, 92));
        items.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        items.setForeground(new java.awt.Color(255, 255, 255));
        items.setEnabled(false);

        jLabel29.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("QUANTITY");

        jLabel30.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("WAITER NAME:");

        restaurantGstCheckBox.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        restaurantGstCheckBox.setForeground(new java.awt.Color(240, 240, 240));
        restaurantGstCheckBox.setSelected(true);
        restaurantGstCheckBox.setText("Apply GST");
        restaurantGstCheckBox.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(addToCart, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quantity)
                    .addComponent(waiterName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tableNumber, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(items, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(restaurantGstCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(restaurantCheckBox)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(restaurantCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tableNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(items, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(waiterName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(restaurantGstCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 61, 0));

        heading.setBackground(new java.awt.Color(0, 145, 234));
        heading.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 36)); // NOI18N
        heading.setForeground(new java.awt.Color(255, 255, 255));
        heading.setText("WELCOME TO POINT OF SALE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(383, 383, 383)
                .addComponent(heading)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(heading, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(0, 105, 92));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INVOICE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Berlin Sans FB Demi", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("ROOM  BILL TOTAL");

        restaurantBillTotal.setEditable(false);
        restaurantBillTotal.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        restaurantBillTotal.setText("0");

        jLabel17.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("RESTAURANT BILL TOTAL");

        jLabel18.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("DISCOUNT (%)");

        jLabel21.setBackground(new java.awt.Color(0, 105, 92));
        jLabel21.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("PAYABLE AMOUNT");

        payableAmount.setEditable(false);
        payableAmount.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N

        discount.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        discount.setText("0");

        roomBillTotal.setEditable(false);
        roomBillTotal.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        roomBillTotal.setText("0");

        calculateButton.setBackground(new java.awt.Color(255, 0, 0));
        calculateButton.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        calculateButton.setForeground(new java.awt.Color(255, 255, 255));
        calculateButton.setText("CALCULATE");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(discount, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(restaurantBillTotal)
                        .addComponent(roomBillTotal))
                    .addComponent(payableAmount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(calculateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomBillTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(restaurantBillTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(discount, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payableAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calculateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 105, 92));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CUSTOMER INFORMATION", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Berlin Sans FB Demi", 0, 24), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        mobileNumber.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Mobile No.");

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Address.");

        address.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("First Name");

        billNumber.setEditable(false);
        billNumber.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N

        jLabel25.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("ZIPCODE");

        lastName.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N

        firstName.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N

        jLabel26.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("BILLNO.");

        jLabel27.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Last Name");

        zipCode.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE))
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(billNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel25))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(address)
                    .addComponent(mobileNumber)
                    .addComponent(zipCode))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(billNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(zipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        resetButton.setBackground(new java.awt.Color(255, 0, 0));
        resetButton.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        resetButton.setForeground(new java.awt.Color(255, 255, 255));
        resetButton.setText("GENERATE NEW BILL/RESET");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(0, 105, 92));
        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        printButton.setBackground(new java.awt.Color(255, 0, 0));
        printButton.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        printButton.setForeground(new java.awt.Color(255, 255, 255));
        printButton.setText("PRINT");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        add.setBackground(new java.awt.Color(255, 0, 0));
        add.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("Add Items");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        refresh.setBackground(new java.awt.Color(255, 0, 0));
        refresh.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        refresh.setForeground(new java.awt.Color(255, 255, 255));
        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(printButton, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(0, 105, 92));
        jPanel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        balance.setEditable(false);
        balance.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        balance.setText("0");

        jLabel19.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("RECEIVED AMOUNT");

        rec.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        rec.setText("0");
        rec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("BALANCE :");

        changeButtonActionPerformed.setBackground(new java.awt.Color(255, 0, 0));
        changeButtonActionPerformed.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        changeButtonActionPerformed.setForeground(new java.awt.Color(255, 255, 255));
        changeButtonActionPerformed.setText("GENERATE BILL");
        changeButtonActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeButtonActionPerformedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(changeButtonActionPerformed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rec)
                            .addComponent(balance))))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rec, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(changeButtonActionPerformed, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(resetButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void restaurantCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restaurantCheckBoxActionPerformed
        // TODO add your handling code here:
        if(restaurantCheckBox.isSelected()){
        tableNumber.setEnabled(true);
        items.setEnabled(true);
        quantity.setEnabled(true);
        waiterName.setEnabled(true);
        restaurantGstCheckBox.setEnabled(true);
        addToCart.setEnabled(true);
        removeOrder.setEnabled(true);
        restaurantTable.setEnabled(true);
       
        
        
        }else{
        tableNumber.setEnabled(false);
        items.setEnabled(false);
        quantity.setEnabled(false);
        waiterName.setEnabled(false);
        restaurantGstCheckBox.setEnabled(false);
        addToCart.setEnabled(false);
        removeOrder.setEnabled(false);
        restaurantTable.setEnabled(false);
        
        
        
        
        }
        
        
    }//GEN-LAST:event_restaurantCheckBoxActionPerformed

    private void hotelCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelCheckBoxActionPerformed
        // TODO add your handling code here:
        
        
        
        if(hotelCheckBox.isSelected()){
        checkInDate.setEnabled(true);
        checkOutDate.setEnabled(true);
        roomNumber.setEnabled(true);
        roomType.setEnabled(true);
        numberOfNight.setEnabled(true);
        pricePerNight.setEnabled(true);
        hotelAddButton.setEnabled(true);
        hotelRemoveButton.setEnabled(true);
        hotelGstCheckBox.setEnabled(true);
        hotelTable.setEnabled(true);
       
        }else{
            checkInDate.setEnabled(false);
        checkOutDate.setEnabled(false);
        roomNumber.setEnabled(false);
        roomType.setEnabled(false);
        numberOfNight.setEnabled(false);
        pricePerNight.setEnabled(false);
        hotelAddButton.setEnabled(false);
        hotelRemoveButton.setEnabled(false);
        hotelTable.setEnabled(false);
        hotelGstCheckBox.setEnabled(false);
        
        }
        
        
        
    }//GEN-LAST:event_hotelCheckBoxActionPerformed

    private void hotelAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelAddButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)hotelTable.getModel();
        int n = Integer.parseInt(numberOfNight.getText());
        double p = Double.parseDouble(pricePerNight.getText());
        double sum =0d;
        
        double sb=getSubtotal(n, p);
        if(hotelGstCheckBox.isSelected()){
          gstH = getGst(sb);
        }else{
            
            gstH=0;
        }
        model.addRow(new Object[]{roomNumber.getSelectedItem(),n,p,sb ,gstH,gstH+sb});
        for(int i =0;i<hotelTable.getRowCount();i++){
            
        sum+= (double)(hotelTable.getValueAt(i, 5));
           }
        
        
        roomBillTotal.setText(sum+"");
        
        
        
    }//GEN-LAST:event_hotelAddButtonActionPerformed

    private void hotelRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelRemoveButtonActionPerformed
        // TODO add your handling code here:
        try{
        DefaultTableModel model = (DefaultTableModel)hotelTable.getModel();
        int  selectedRow = hotelTable.getSelectedRow();
        
        
        double subtractRemoved = (double)hotelTable.getValueAt(selectedRow, 5);
        double netBill = (Double.parseDouble(roomBillTotal.getText())-subtractRemoved);
        
        roomBillTotal.setText(netBill+"");
        model.removeRow(selectedRow);
        
        }catch(Exception e){
        JOptionPane.showMessageDialog(this, "Please select at Least one Item of  the Table"+e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_hotelRemoveButtonActionPerformed

    private void addToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartActionPerformed
        DefaultTableModel model = (DefaultTableModel)restaurantTable.getModel();
        int quan = Integer.parseInt(this.quantity.getText());
        
        
        double sum = 0d;
        this.connectDatabase();
        try{
            
            
        PreparedStatement psmt = con.prepareStatement("SELECT price FROM menu_item where name ="+"\""+items.getSelectedItem()+"\"");
        ResultSet rs = psmt.executeQuery();
        
        while(rs.next()){
        p= rs.getDouble("price");
        }
       
        con.close();
        psmt.close();
        rs.close();
            
        }catch(SQLException my){
            JOptionPane.showMessageDialog(this, my.getMessage(),"SQLError",  JOptionPane.ERROR_MESSAGE);
            
            
        }
        //price check and calculate
        double rate = p; 
         double netp =(double) quan*rate;
         //Gst check anc calculete
         if(restaurantGstCheckBox.isSelected()){
          gstR = getGstR(netp);
        }else{
            
            gstR=0d;
        }
         
         
         
        double l =netp+gstR;  
        model.addRow(new Object[]{items.getSelectedItem(),quan,rate,netp,gstR,l});
        for(int i =0;i<restaurantTable.getRowCount();i++){
            
        sum+= (double)(restaurantTable.getValueAt(i, 5));
           }
        
        
        restaurantBillTotal.setText(sum+"");
        
        
        
        
    }//GEN-LAST:event_addToCartActionPerformed

    private void removeOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeOrderActionPerformed
        // TODO add your handling code here:
        
        try{
        DefaultTableModel model = (DefaultTableModel)restaurantTable.getModel();
        int  selectedRow = restaurantTable.getSelectedRow();
        
        
        double subtractRemoved = (double)restaurantTable.getValueAt(selectedRow, 5);
        double netBill = (Double.parseDouble(restaurantBillTotal.getText())-subtractRemoved);
        
        restaurantBillTotal.setText(netBill+"");
        
        
        model.removeRow(selectedRow);
        
        
        
        }catch(Exception e){
        JOptionPane.showMessageDialog(this, "Please select at Least one Item of the Table", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_removeOrderActionPerformed

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
        // TODO add your handling code here:
        try{
        double roomB = Double.parseDouble(roomBillTotal.getText());
        double restaurantB = Double.parseDouble(restaurantBillTotal.getText());
        double totalBill = (roomB+restaurantB);
        double discPercentage = Double.parseDouble(discount.getText());
        double disc = ((discPercentage/100)*totalBill);
        double ttl = (totalBill-disc);
        payableAmount.setText(""+ttl);
        }catch(NumberFormatException c){
        JOptionPane.showMessageDialog(this, "Error", c.getMessage(), JOptionPane.WARNING_MESSAGE);
        
        }
    }//GEN-LAST:event_calculateButtonActionPerformed

    private void changeButtonActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeButtonActionPerformedActionPerformed
       if(hotelCheckBox.isSelected()|| restaurantCheckBox.isSelected()){
        double receivedAmt=0d;
        try{
        receivedAmt = Double.parseDouble(rec.getText());
        }catch(NumberFormatException e){
            
            JOptionPane.showMessageDialog(this, "Error", e.getMessage(), JOptionPane.WARNING_MESSAGE);
        
        }
        double payableAmt = Double.parseDouble(payableAmount.getText());
        
        
        double bal;
        if(receivedAmt<=payableAmt){
        bal = payableAmt-receivedAmt;
        balance.setText(""+bal);
        }else{
        bal = payableAmt-receivedAmt;
        balance.setText(""+bal);
        }
       
        //ADD CONDITION NOT TO COMMIT UNTIL ALL ARE FILLED
        
        this.generateBill();
        
        
        try {
            this.CreateInvoice();
        } catch (DocumentException ex) {
            Logger.getLogger(RestaurentHotel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(RestaurentHotel.class.getName()).log(Level.SEVERE, null, ex);
        }
      
        }else{
            JOptionPane.showMessageDialog(this,"Select HotelBox or Restaurant/Bar box","Error", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_changeButtonActionPerformedActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here====================
         DefaultTableModel model1 = (DefaultTableModel)hotelTable.getModel();
         DefaultTableModel model2 = (DefaultTableModel)restaurantTable.getModel();
         this.intItems();
         
        checkInDate.setDate(null);
        checkOutDate.setDate(null);
        roomNumber.setSelectedIndex(0);
        roomType.setSelectedIndex(0);
        numberOfNight.setText(null);
        pricePerNight.setText(null);
        
        billNumber.setText(null);
        firstName.setText(null);
        lastName.setText(null);
        address.setText(null);
        mobileNumber.setText(null);
        zipCode.setText(null);
        hotelCheckBox.setSelected(false);
        restaurantCheckBox.setSelected(false);
        tableNumber.setSelectedIndex(0);
        items.setSelectedIndex(0);
        quantity.setText(null);
        waiterName.setText(null);
        
        roomBillTotal.setText(null);
        restaurantBillTotal.setText(null);
        discount.setText(null);
        payableAmount.setText(null);
        rec.setText(null);
        balance.setText(null);
        billNo = 0;
        
      int rowCount = model1.getRowCount();
//Remove rows one by one from the end of the table
for (int i = rowCount - 1; i >= 0; i--) {
    model1.removeRow(i);
}
 
        
  int rowCount1 = model2.getRowCount();
//Remove rows one by one from the end of the table
for (int i = rowCount1 - 1; i >= 0; i--) {
    model2.removeRow(i);
}
        
        
        
        //===============================================================
        
        
    }//GEN-LAST:event_resetButtonActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        AddMenu obj = new AddMenu();
        obj.main(new String[]{});
        
    }//GEN-LAST:event_addActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
         if(hotelCheckBox.isSelected()|| restaurantCheckBox.isSelected()){
        
        try {
            // TODO add your handling code here:

            PrintPDF.printPDF(path);
        } catch (IOException ex) {
            Logger.getLogger(RestaurentHotel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (PrintException ex) {
            Logger.getLogger(RestaurentHotel.class.getName()).log(Level.SEVERE, null, ex);
        }
         }else{
             JOptionPane.showMessageDialog(this,"Please Select Hotel Box or Restaurant/Bar box","Error", JOptionPane.WARNING_MESSAGE);
         }
        
        
    }//GEN-LAST:event_printButtonActionPerformed

    private void recActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        items.removeAllItems();
        this.intItems();
    }//GEN-LAST:event_refreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RestaurentHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RestaurentHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RestaurentHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestaurentHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
         CashierName = args[0];
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new RestaurentHotel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton addToCart;
    private javax.swing.JTextField address;
    private javax.swing.JTextField balance;
    private javax.swing.JTextField billNumber;
    private javax.swing.JButton calculateButton;
    private javax.swing.JButton changeButtonActionPerformed;
    private com.toedter.calendar.JDateChooser checkInDate;
    private com.toedter.calendar.JDateChooser checkOutDate;
    private javax.swing.JTextField discount;
    private javax.swing.JTextField firstName;
    private javax.swing.JLabel heading;
    private javax.swing.JButton hotelAddButton;
    private javax.swing.JCheckBox hotelCheckBox;
    private javax.swing.JCheckBox hotelGstCheckBox;
    private javax.swing.JButton hotelRemoveButton;
    private javax.swing.JTable hotelTable;
    private javax.swing.JComboBox<String> items;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lastName;
    private javax.swing.JTextField mobileNumber;
    private javax.swing.JTextField numberOfNight;
    private javax.swing.JTextField payableAmount;
    private javax.swing.JTextField pricePerNight;
    private javax.swing.JButton printButton;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField rec;
    private javax.swing.JButton refresh;
    private javax.swing.JButton removeOrder;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextField restaurantBillTotal;
    private javax.swing.JCheckBox restaurantCheckBox;
    private javax.swing.JCheckBox restaurantGstCheckBox;
    private javax.swing.JTable restaurantTable;
    private javax.swing.JTextField roomBillTotal;
    private javax.swing.JComboBox<String> roomNumber;
    private javax.swing.JComboBox<String> roomType;
    private javax.swing.JComboBox<String> tableNumber;
    private javax.swing.JTextField waiterName;
    private javax.swing.JTextField zipCode;
    // End of variables declaration//GEN-END:variables
    private static int billNo = 0;
    private double gstR =0d;
    private  double gstH =0d;
    private static  String CashierName = "";
    private  Connection con= null; 
    private double p = 0d;
    private String path ="";
   
   Date javaDate = new Date();
   long javaTime = javaDate.getTime();
   java.sql.Date sqlDate = new java.sql.Date(javaTime);
   java.sql.Time sqlTime = new java.sql.Time(javaTime);
   SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
   SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
       
   
   private java.sql.Date getCheckInDate(){
   Date javaCheckIn = checkInDate.getDate();
   long javaCheckInTIme = javaCheckIn.getTime();
    return   (new java.sql.Date(javaCheckInTIme));
       
   }
  private java.sql.Date getCheckOutDate(){
   Date javaCheckOut = checkOutDate.getDate();
   long javaCheckOutTime = javaCheckOut.getTime();
     return   (new java.sql.Date(javaCheckOutTime));
       
   }
  
  
  
  
    private  java.sql.Date  getDate(){ 
            
           return sqlDate;
    
    }
    private  java.sql.Time getTime(){ 
            
           return sqlTime ;
    
    }
    
    
    private double getGst(double sb) {
        
        return((12*sb)/100);      //To change body of generated methods, choose Tools | Templates.
    }
    private double getGstR(double sb) {
        
        return((5*sb)/100);      //To change body of generated methods, choose Tools | Templates.
    }
    
    
    public void CreateInvoice() throws DocumentException, IOException{
        final  String RESULT = "E:\\hhpos\\Invoice"+billNo+".pdf";
        path = RESULT;
    
    // step 1
        Document document = new Document();
        PdfWriter writer = null;
        // step 2
        try{
         writer =PdfWriter.getInstance(document, new FileOutputStream(RESULT));
        }catch(FileNotFoundException e){
            JOptionPane.showMessageDialog(this, "FileNotFound", "Error", JOptionPane.ERROR_MESSAGE);
            
        }
        document.setPageSize(PageSize.A4);
        document.setMargins(15, 15, 15, 15);
        document.setMarginMirroring(true);
        // step 3
        document.open();
        // write your document here
        
        
        
        
        //--------------------------------------------------------------Do not edit it----------------------------------------------------------------
        
        Phrase[] phrase =  {new Phrase(),new Phrase(),new Phrase(),new Phrase()};
        Paragraph[] paragraph = {new Paragraph(),new Paragraph(),new Paragraph(),new Paragraph()};
        
        
        phrase[0].add(new Chunk("HOTEL PUNNU INTERNATIONAL",new Font(Font.FontFamily.HELVETICA,18,Font.BOLD)));
        phrase[0].add(Chunk.NEWLINE);
        
        Font firstHeading = new Font(Font.FontFamily.COURIER, 15, Font.BOLD);
        Chunk title = new Chunk("LIQUID BAR & RESTAURANT",firstHeading);
        phrase[0].add(title);
        phrase[0].add(Chunk.NEWLINE);
        //phrase[0].add(Chunk.NEWLINE);
        
        phrase[0].add(new Chunk("7-Court Road,Amritsar",new Font(Font.FontFamily.TIMES_ROMAN,12,Font.NORMAL)));
        phrase[0].add(Chunk.NEWLINE);
        
        
        phrase[0].add(new Chunk("Ph:0183-5016767",new Font(Font.FontFamily.TIMES_ROMAN,12,Font.NORMAL)));
        phrase[0].add(Chunk.NEWLINE);
        
        
        phrase[0].add(new Chunk("Sale Invoice",new Font(Font.FontFamily.TIMES_ROMAN,12,Font.ITALIC)));
        phrase[0].add(Chunk.NEWLINE);
        phrase[0].add(Chunk.NEWLINE);
        paragraph[0].add(phrase[0]);
        paragraph[0].setAlignment(Element.ALIGN_CENTER);   
        document.add(paragraph[0]);
      
        //------------------------------------------------------------------------------------------------------------------------
        
        
        
        PdfPTable table = new PdfPTable(2);
        table.setWidthPercentage(100);
        //Add Invoice No. Here 
        //Add system date 
        //Add time
        //Add Cahier Name
        //Get Invoice No.  /Date /Time From DataBase
        PdfPCell top1 = getCell("GSTIN:03AAUPK3355J2ZF",PdfPCell.ALIGN_LEFT);//Add invoice no. here;
        top1.setBorderWidthTop(1f);
        table.addCell(top1);
        
        PdfPCell top2 =getCell("INVOICE NO.:"+billNumber.getText(),PdfPCell.ALIGN_RIGHT); //Add System current Date here;
        top2.setBorderWidthTop(1f);
        table.addCell(top2);
        PdfPCell top3 =getCell("DATE:"+getDate(),PdfPCell.ALIGN_LEFT);//Add System current TIME here;
        top3.setBorderWidthBottom(1f);
        table.addCell(top3);
        PdfPCell top4 =getCell("TIME:"+getTime(),PdfPCell.ALIGN_RIGHT);//Add System USER NAME here;
        top4.setBorderWidthBottom(1f);
        table.addCell(top4);
        document.add(table);
        document.add(addEmptyLine(new Paragraph(""), new Phrase(new Chunk(""))));

        //--------------------------------------------------------------------------------------------------------------------------------------------------------------
       if(hotelCheckBox.isSelected()) {// Add Check Box condition here
        //if customer selected hotel then print below
        PdfPTable table2 = new PdfPTable(4);
        table2.setWidthPercentage(100);
        table2.setWidths(new float[] {69f,70f,45f,145f});
        
        
        PdfPCell cellH = createHeaderCell("BILL TO: ");
        cellH.setColspan(4);
        cellH.setBorderWidthBottom(2f);
        cellH.setBorderWidthRight(2f);
        cellH.setHorizontalAlignment(Element.ALIGN_LEFT);
        table2.addCell(cellH);
        table2.addCell(createValueCell("CUSTOMER NAME:"));
        table2.addCell(createValueCell(firstName.getText()+" "+lastName.getText()));//Add customer Name here
        table2.addCell(createValueCell("ADDRESS:"));
        table2.addCell(createValueCell(address.getText()));//Add address here
        table2.addCell(createValueCell("MOBILE NO:"));
        table2.addCell(createValueCell(mobileNumber.getText()));//Add mobile no. here
        table2.addCell(createValueCell("ZIPCODE:"));
        table2.addCell(createValueCell(zipCode.getText()));//Add zipcode here
         document.add(table2);
        
        //------------------------------------------------------------------------------
        document.add(addEmptyLine(new Paragraph(""), new Phrase(new Chunk(""))));
        
         PdfPTable table3 = new PdfPTable(7);
        table3.setWidthPercentage(100);
        
        //table3.setWidths(new float[] {35f,150f,30f,45f,45f});
        
        
 
    PdfPCell cell2 = createTitleCell("HOTEL BILL", 7);
        cell2.setHorizontalAlignment(Element.ALIGN_CENTER);    
        
        cell2.setBorder(0);
        cell2.setPadding(4f);
        cell2.setBorderWidthBottom(2f);// For Adding Bottom Border
        table3.addCell(cell2);
        table3.addCell(createHeaderCell("ROOM #"));
        table3.addCell(createHeaderCell("DESC."));//ROOM TYPE // OTHER ROOM HEATER
        table3.addCell(createHeaderCell("CHECK IN"));
        table3.addCell(createHeaderCell("CHECK OUT"));
        table3.addCell(createHeaderCell("# NIGHT"));
        table3.addCell(createHeaderCell("RATE"));
        table3.addCell(createHeaderCell("LINE TOTAL"));
        //-------------------------------------------------------------------------------------------------
        //ADD TABLE DATA HERE use for loop
        //PdfPCell cellTableNo =createValueCell("T101"); 
        //cellTableNo.setRowspan(3);// specify no. of rows to be printed
        //cellTableNo.setVerticalAlignment(Element.ALIGN_MIDDLE);
       // table3.addCell(cellTableNo);
          
       //For Reading Date
       
     String checkIn = dateFormat.format(checkInDate.getDate());
     String checkOut = dateFormat.format(checkOutDate.getDate());
     
       
       
      for(int i =0;i<hotelTable.getRowCount();i++){// specify no. of rows to be of JHotelTable
          table3.addCell(createValueCell((String)hotelTable.getValueAt(i,0)));//Add room no.
          table3.addCell(createValueCell((String)roomType.getSelectedItem()));// Room type or services
          table3.addCell(createValueCell(checkIn));//Check In Date
          table3.addCell(createValueCell(checkOut));//Check Out Date
          table3.addCell(createValueCell(""+hotelTable.getValueAt(i,1)));// #Nights
          table3.addCell(createValueCell(""+hotelTable.getValueAt(i,2)));//price per night
          table3.addCell(createValueCell(""+hotelTable.getValueAt(i,3)));//line total 
      }
        
        
        //Add Total here  
        table3.addCell(createTitleCell("SUBTOTAL:", 6));
        table3.addCell(createTitleCell("Rs."+getHotelSubtotal(), 1));// ADD TOTAL HERE
        table3.addCell(createTitleCell("SGST:", 6));
        table3.addCell(createTitleCell("Rs."+(getHotelGst()/2), 1));// ADD SGST HERE
        table3.addCell(createTitleCell("CGST:", 6));
        table3.addCell(createTitleCell("Rs."+(getHotelGst()/2), 1));//ADD CGST HERE
        table3.addCell(createTitleCell("TOTAL:", 6));
        table3.addCell(createTitleCell("Rs."+roomBillTotal.getText(), 1));//Add Total Here
        document.add(table3);
        document.add(addEmptyLine(new Paragraph(""), new Phrase(new Chunk(""))));
        
    }
        
        
        //------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      //If User slected Restauran/Bar CheckBox Use Below Format
        if(restaurantCheckBox.isSelected()){
        PdfPTable table1 = new PdfPTable(5);
        table1.setWidthPercentage(100);
        
        table1.setWidths(new float[] {35f,150f,30f,45f,45f});
        
        
 
    PdfPCell cell = createTitleCell("RESTAURANT /BAR BILL", 5);
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);    
        
        cell.setBorder(0);
        cell.setPadding(4f);
        cell.setBorderWidthBottom(2f);// For Adding Bottom Border
        table1.addCell(cell);
        table1.addCell(createHeaderCell("TABLE #"));
        table1.addCell(createHeaderCell("ITEMS"));
        table1.addCell(createHeaderCell("RATE"));
        table1.addCell(createHeaderCell("QUANTITY"));
        table1.addCell(createHeaderCell("AMOUNT"));
      
        //ADD TABLE DATA HERE use for loop
        PdfPCell cellTableNo =createValueCell(""+tableNumber.getSelectedItem()); //Add table no. here 
        cellTableNo.setRowspan(restaurantTable.getRowCount());// specify no. of rows to be printed
        cellTableNo.setVerticalAlignment(Element.ALIGN_MIDDLE);
        table1.addCell(cellTableNo);
          
      for(int i =0;i<restaurantTable.getRowCount();i++){// specify no. of rows to be printed
          table1.addCell(createValueCell(restaurantTable.getValueAt(i, 0).toString()));//Item
          table1.addCell(createValueCell(restaurantTable.getValueAt(i,2).toString()));//Rate
          table1.addCell(createValueCell(restaurantTable.getValueAt(i,1).toString()));//quantity
          table1.addCell(createValueCell(restaurantTable.getValueAt(i, 3).toString()));//Net Price total
       
      }
        
        
        //Add Total here  
        table1.addCell(createTitleCell("SUBTOTAL:", 4));
        table1.addCell(createTitleCell("Rs."+getRestaurantSubtotal(), 1));// ADD TOTAL HERE
        table1.addCell(createTitleCell("SGST:", 4));
        table1.addCell(createTitleCell("Rs."+(getRestaurantGst()/2), 1));// ADD SGST HERE
        table1.addCell(createTitleCell("CGST:", 4));
        table1.addCell(createTitleCell("Rs."+(getRestaurantGst()/2), 1));//ADD CGST HERE
        table1.addCell(createTitleCell("TOTAL:", 4));
        table1.addCell(createTitleCell("Rs."+restaurantBillTotal.getText(), 1));//Add total here
        document.add(table1);
        }
        
        
        
        //document.add(addEmptyLine(new Paragraph(""), new Phrase(new Chunk(""))));
        //---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        //Restaurant Bill total
        //Hotel Bill total
        //Net Amount
        //Received Amount
  
        phrase[2].add(new Chunk("---------------------------------------------------------------------------------------------------------------------------------------------",new Font(Font.FontFamily.HELVETICA,12,Font.BOLD)));
        phrase[2].add(Chunk.NEWLINE);
      
        //DISCOUNT AMOUNT
        phrase[2].add(new Chunk("DISCOUNT AMOUNT: Rs."+discount.getText()+"/-",new Font(Font.FontFamily.COURIER,12,Font.BOLD)));
        phrase[2].add(Chunk.NEWLINE);
        
        
        
        //NET AMOUNT
        
        phrase[2].add(new Chunk("NET AMOUNT: Rs."+payableAmount.getText()+"/-",new Font(Font.FontFamily.COURIER,12,Font.BOLD)));
        phrase[2].add(Chunk.NEWLINE);
        
        //Received Amount
        
        phrase[2].add(new Chunk("RECEIVED AMOUNT: Rs."+rec.getText()+"/-",new Font(Font.FontFamily.COURIER,12,Font.BOLD)));
        phrase[2].add(Chunk.NEWLINE);
        
        //BALANCE
        phrase[2].add(new Chunk("BALANCE: Rs."+balance.getText()+"/-",new Font(Font.FontFamily.COURIER,12,Font.BOLD)));
        phrase[2].add(Chunk.NEWLINE);
        
        
        phrase[2].add(new Chunk("---------------------------------------------------------------------------------------------------------------------------------------------",new Font(Font.FontFamily.HELVETICA,12,Font.BOLD)));
       // phrase[2].add(Chunk.NEWLINE);
        

       
        paragraph[2].add(phrase[2]);
        paragraph[2].setAlignment(Element.ALIGN_RIGHT);
        document.add(paragraph[2]);
        
        phrase[3].add(new Chunk("Thank you,Please Visit Again",new Font(Font.FontFamily.HELVETICA,12,Font.BOLD)));//ADD YOUR GST NO. HERE
        
      
        
        paragraph[3].add(phrase[3]);
        paragraph[3].setAlignment(Element.ALIGN_CENTER);
        document.add(paragraph[3]);
        
        //--------------------------Add footer here----------
        MyFooter myFooter = new MyFooter();
        myFooter.onEndPage(writer, document);
        
        
        document.addCreator("Nishant");
        document.addHeader("a", "Nishnat");
        document.close();
 
    
    
    
    
}
    private static Paragraph addEmptyLine(Paragraph p,Phrase ph) {
        Paragraph space = p ;
        Phrase spacep= ph;
        spacep.add(Chunk.NEWLINE);
        space.add(spacep);
        return space;
    }
     
     // create cells
    private static PdfPCell createValueCell(String text){
        // font
        Font font = new Font(Font.FontFamily.COURIER, 11, Font.BOLD, BaseColor.BLACK);
 
        // create cell
        PdfPCell cell = new PdfPCell(new Phrase(text,font));
 
        // set style
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
         // padding
        cell.setPadding(4f);
 
        // background color
        cell.setBackgroundColor(new BaseColor(255,255,255));
 
        // border
        //cell.setBorder(0);
        //cell.setBorderWidthLeft(1f);
        //cell.setBorderWidthRight(1f);
        
        return cell;
    }
    
    
    private static PdfPCell createHeaderCell(String text){
        // font
        Font font = new Font(Font.FontFamily.HELVETICA, 11, Font.BOLD, BaseColor.BLACK);
 
        // create cell
        PdfPCell cell = new PdfPCell(new Phrase(text,font));
 
        // set style
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
         // padding
        cell.setPadding(3f);
 
        // background color
        cell.setBackgroundColor(new BaseColor(255,255,255));
 
        // border
        
        return cell;
    }
    
    
    private static PdfPCell createTitleCell(String text,int s){
        // font
        Font cellFont = new Font(Font.FontFamily.HELVETICA,11,Font.BOLD,BaseColor.BLACK);
 
        // create cell
        PdfPCell cell = new PdfPCell(new Phrase(text,cellFont));
        cell.setColspan(s);
 
        // set style
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
         // padding
      
 
        // background color
        cell.setBackgroundColor(new BaseColor(255,255,255));
        
        
        
        // padding
        cell.setPadding(2f);
       
 
        // background color
        cell.setBackgroundColor(new BaseColor(255,255,255));
 
        // border
        //cell.setBorder(0);
 
        return cell;
    }
    
    public static PdfPCell getCell(String str,int alignment){
        
        Font catFont = new Font(Font.FontFamily.COURIER, 11,Font.BOLD, BaseColor.BLACK);

        Phrase phrase = new Phrase(new Chunk(str,catFont));
        phrase.setFont(catFont);
        
    PdfPCell cell = new PdfPCell(phrase);
    cell.setPadding(0);
    cell.setHorizontalAlignment(alignment);
    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
    cell.setBorder(PdfPCell.NO_BORDER);
    //cell.setBorderWidthTop(1);
    //cell.setBorderWidthBottom(1);
    cell.setPaddingTop(3f);
    cell.setPaddingBottom(4f);
    return cell;
    }
    private double getHotelSubtotal(){
        double sum = 0d;
        for(int i =0;i<hotelTable.getRowCount();i++){
            
        sum+= (double)(hotelTable.getValueAt(i, 3));
           }
        return sum;
        
    }
    
    private double getHotelGst(){
        double sum=0d;
        for(int i =0;i<hotelTable.getRowCount();i++){
            
        sum+= (double)(hotelTable.getValueAt(i, 4));
           }
        
        return sum;
    }
    
    private double getRestaurantSubtotal(){
        double sum = 0d;
        for(int i =0;i<restaurantTable.getRowCount();i++){
            
        sum+= (double)(restaurantTable.getValueAt(i, 3));
           }
        return sum;
        
    }
    
    
    private double getRestaurantGst(){
        double sum=0d;
        for(int i =0;i<restaurantTable.getRowCount();i++){
            
        sum+= (double)(restaurantTable.getValueAt(i, 4));
           }
        
        return sum;
    }

    private void generateBill() {
     
        this.connectDatabase();
      try{
        PreparedStatement psmt = con.prepareStatement("INSERT INTO MAIN_BILL(RESTAURANT_BILL,RESTAURANT_GST,ROOM_BILL_TOTAL,ROOM_GST,PAYABLE_AMOUNT,DISCOUNT,RECEIVED_AMOUNT,BILL_DATE,BILL_TIME,Cashier) VALUES(?,?,?,?,?,?,?,?,?,?)");
        PreparedStatement getInvoice = con.prepareStatement("SELECT Invoice_no FROM main_bill ORDER BY Invoice_no DESC LIMIT 1;");
        
        
        psmt.setDouble(1,Double.parseDouble(restaurantBillTotal.getText()));
        psmt.setDouble(2,getRestaurantGst());
        psmt.setDouble(3,Double.parseDouble(roomBillTotal.getText()));
        psmt.setDouble(4,getHotelGst());
        psmt.setDouble(5,Double.parseDouble(payableAmount.getText()));
        psmt.setDouble(6,Double.parseDouble(discount.getText()));
        psmt.setDouble(7,Double.parseDouble(rec.getText()));
        psmt.setDate(8,getDate());
        psmt.setTime(9,getTime());
        psmt.setString(10,CashierName);
        int i  = psmt.executeUpdate();
        System.out.println("Information inserted "+i); 
        //Insert customer Information
        
        //=====================Get BIll NO. From Here===========================================================================
        ResultSet rs = getInvoice.executeQuery();
        while (rs.next()){
            billNo = rs.getInt("INVOICE_NO");
        }
        billNumber.setText(""+billNo);
        
        //===========================================================================================================================================================
        if(hotelCheckBox.isSelected()){  
          PreparedStatement cust = con.prepareStatement("INSERT INTO customer(BILL_NO,FIRST_NAME,LAST_NAME,ADDRESS,MOBILE_NO,CHECK_IN,CHECK_OUT,CUSTOMER_TYPES) VALUES(?,?,?,?,?,?,?,?)");
          PreparedStatement hotel = con.prepareStatement("INSERT INTO hotel VALUES(?,?,?,?,?,?,?,?,?)");
          cust.setInt(1, billNo);
          cust.setString(2, firstName.getText());
          cust.setString(3,lastName.getText());
          cust.setString(4,address.getText());
          cust.setString(5, mobileNumber.getText());
          cust.setDate(6, getCheckInDate());
          cust.setDate(7,getCheckOutDate());
          cust.setString(8,"Walk In");
          int j = cust.executeUpdate();
          
          
          for(int k=0;k<hotelTable.getRowCount();k++){
          hotel.setInt(1,billNo);
          hotel.setInt(2,Integer.parseInt(hotelTable.getValueAt(k,0).toString()));
          hotel.setInt(3,Integer.parseInt(hotelTable.getValueAt(k,1).toString()));
          hotel.setDouble(4,Double.parseDouble(hotelTable.getValueAt(k,3).toString()));
          hotel.setDouble(5,Double.parseDouble(hotelTable.getValueAt(k,4).toString()));
          hotel.setDouble(6,Double.parseDouble(hotelTable.getValueAt(k,5).toString()));
          hotel.setDate(7,getDate());
          hotel.setTime(8,getTime());
          hotel.setDouble(9,Double.parseDouble(hotelTable.getValueAt(k,2).toString()));
          hotel.executeUpdate();
          
          }
        }
        
        if(restaurantCheckBox.isSelected()){
            PreparedStatement restaurant = con.prepareStatement("INSERT INTO restaurant VALUES(?,?,?,?,?,?,?,?,?,?)");
            
          for(int l=0;l<restaurantTable.getRowCount();l++){
          restaurant.setInt(1,billNo);
          restaurant.setString(2,tableNumber.getSelectedItem().toString());
          restaurant.setString(3,restaurantTable.getValueAt(l,0).toString());
          restaurant.setInt(4,Integer.parseInt(restaurantTable.getValueAt(l,1).toString()));
          restaurant.setDouble(5,Double.parseDouble(restaurantTable.getValueAt(l,2).toString()));
          restaurant.setDouble(6,Double.parseDouble(restaurantTable.getValueAt(l,3).toString()));
          restaurant.setDouble(7,Double.parseDouble(restaurantTable.getValueAt(l,4).toString()));
          restaurant.setDouble(8,Double.parseDouble(restaurantTable.getValueAt(l,5).toString()));
          restaurant.setDate(9, getDate());
          restaurant.setTime(10, getTime());
          restaurant.executeUpdate();
            
        }
        }
        
        System.out.println("Customer Information Inserted ");
        
        
        
               
        rs.close();
        con.close();
        psmt.close();
        }catch(SQLException my){
      // perform  excepiton here please
        JOptionPane.showMessageDialog(this, my.getMessage(),"SQLError",  JOptionPane.ERROR_MESSAGE);
      }
}
}
